{"mappings":"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","sources":["<anon>","src/index.ts","src/state.ts","src/router.ts","src/pages/welcome/index.ts","src/pages/instructions/index.ts","src/pages/game/index.ts","src/computerPlay.ts","src/pages/result/index.ts","src/pages/result-score/index.ts","src/components/boton-normal-el.ts","src/components/papel-el.ts","src/components/piedra-el.ts","src/components/tijeras-el.ts","src/components/result-score-el.ts"],"sourcesContent":["const $0b89d474933103bc$export$ca000e230c0caa3e = {\n    data: {\n        currentGame: {\n            computerPlay: \"\",\n            myPlay: \"\"\n        },\n        history: []\n    },\n    listeners: [],\n    setMove (move) {\n        const currentState = this.getState();\n        currentState.currentGame.myPlay;\n    },\n    whoWins (myPlay, computerPlay) {\n        //cada constante evalua si el && devuelve true, dependiendo\n        //de myPlay y computerPlay enviada por parametro\n        const ganeConTijeras = myPlay == \"tijeras\" && computerPlay == \"papel\";\n        const ganeConPiedra = myPlay == \"piedra\" && computerPlay == \"tijeras\";\n        const ganeConPapel = myPlay == \"papel\" && computerPlay == \"piedra\";\n        const gane = [\n            ganeConTijeras,\n            ganeConPiedra,\n            ganeConPapel\n        ].includes(true);\n        const perdiConTijeras = myPlay == \"tijeras\" && computerPlay == \"piedra\";\n        const perdiConPiedra = myPlay == \"piedra\" && computerPlay == \"papel\";\n        const perdiConPapel = myPlay == \"papel\" && computerPlay == \"tijeras\";\n        const perdi = [\n            perdiConPapel,\n            perdiConPiedra,\n            perdiConTijeras\n        ].includes(true);\n        if (perdi == true) return \"Derrota\";\n        else {\n            if (gane == true) return \"Victoria\";\n            else return \"Empate\";\n        }\n    },\n    /*Aca pushea la nueva jugada acumulandola en el historial de jugada\r\n  ya que este historial es que se va a recorrer para calcular el score */ pushToHistory (play) {\n        const currentState = this.getState();\n        currentState.history.push(play);\n        const historyStingifeado = JSON.stringify(currentState.history);\n        localStorage.setItem(\"history\", historyStingifeado);\n        this.setState(currentState);\n    },\n    //devuelve la data del ultimo state\n    getState () {\n        return this.data;\n    },\n    subscribe (callback) {\n        // recibe callbacks para ser avisados posteriormente\n        this.listeners.push(callback);\n    },\n    setState (newState) {\n        // modifica this.data (el state) e invoca los callbacks\n        this.data = newState;\n        //cb de callback\n        //cada vez que se modifica el state se ejecutan los cb suscriptos\n        for (const cb of this.listeners)cb();\n    }\n};\n\n\nfunction $5e365b6ace611e18$export$89c746873e8678ad(params) {\n    const div = document.createElement(\"div\");\n    div.innerHTML = `\r\n            <div class=\"container\">\r\n                <h1 class=\"titulo\">Piedra, Papel o Tijera</h1>\r\n                <button-normal-el class=\"boton\"> Empezar </button-normal-el>\r\n                <tijeras-el class= \"tijeras-img\"></tijeras-el>                \r\n                <piedra-el class= \"piedra-img\"></piedra-el>\r\n                <papel-el class= \"papel-img\"></papel-el>\r\n\r\n            </div>\r\n        `;\n    let style = document.createElement(\"style\");\n    style.textContent = `\r\n                    .container {\r\n                        height: 100vh;\r\n                        width: 100%;\r\n                        padding: 0 30px;\r\n                    }\r\n                    \r\n                    @media (min-width: 600px) {\r\n                        .container {\r\n                        height: 80vh;\r\n                        width: 450px;\r\n                        margin: 0 auto;\r\n                        }\r\n                    }\r\n                    \r\n                    .titulo {\r\n                        font-family: \"Poppins\", sans-serif;\r\n                        font-weight: bold;\r\n                        font-size: 72px;\r\n                        text-align: center;\r\n                        color: var(--titulos);\r\n                        margin-top: 60px;\r\n                        margin-bottom: 80px;\r\n                    }\r\n                    \r\n                    @media (min-width: 600px) {\r\n                        .titulo {\r\n                        font-family: \"Poppins\", sans-serif;\r\n                        font-weight: bold;\r\n                        font-size: 60px;\r\n                        text-align: center;\r\n                        color: var(--titulos);\r\n                        margin-top: 60px;\r\n                        margin-bottom: 40px;\r\n                        }\r\n                    }\r\n                    \r\n                    .piedra-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 160px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .piedra-img {\r\n                        left: 640px;\r\n                      }\r\n                    }\r\n\r\n                    .papel-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 275px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .papel-img {\r\n                        left: 755px;\r\n                      }\r\n                    }\r\n\r\n                    .tijeras-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 50px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .tijeras-img {\r\n                        left: 530px;\r\n                      }\r\n                    }\r\n                  `;\n    div.appendChild(style);\n    const boton = div.querySelector(\".boton\");\n    boton.addEventListener(\"click\", (evento)=>{\n        evento.preventDefault();\n        params.goTo(\"./instructions\");\n    });\n    return div;\n}\n\n\nfunction $1905f0a06a008413$export$82ce9ed5e3451720(params) {\n    const div = document.createElement(\"div\");\n    div.innerHTML = `\r\n              <div class=\"container\">\r\n                  <h3 class=\"texto-instructions\">Presioná jugar\r\n                  y elegí: piedra, papel o tijera antes de que pasen los 3 segundos.</h3>\r\n                  <button-normal-el class=\"boton\"> ¡Jugar! </button-normal-el>\r\n                  <tijeras-el class= \"tijeras-img\"></tijeras-el>                \r\n                  <piedra-el class= \"piedra-img\"></piedra-el>\r\n                  <papel-el class= \"papel-img\"></papel-el>\r\n              </div>\r\n          `;\n    let style = document.createElement(\"style\");\n    style.textContent = `\r\n                      .container {\r\n                          height: 100vh;\r\n                          width: 100%;\r\n                          padding: 0 30px;\r\n                      }\r\n                      \r\n                      @media (min-width: 600px) {\r\n                          .container {\r\n                          height: 80vh;\r\n                          width: 450px;\r\n                          margin: 0 auto;\r\n                          }\r\n                      }\r\n                      \r\n                      .texto-instructions {\r\n                          font-family: \"Poppins\", sans-serif;\r\n                          font-weight: 700;\r\n                          font-size: 36px;\r\n                          text-align: center;\r\n                          color: black;\r\n                          margin-top: 40px;\r\n                          margin-bottom: 60px;\r\n                      }\r\n                      \r\n                      @media (min-width: 600px) {\r\n                          .texto-instructions {               \r\n                          font-size: 36px;                         \r\n                          margin-top: 40px;\r\n                          margin-bottom: 60px;\r\n                          }\r\n                      } \r\n                      \r\n                      .piedra-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 160px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .piedra-img {\r\n                        left: 640px;\r\n                      }\r\n                    }\r\n\r\n                    .papel-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 275px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .papel-img {\r\n                        left: 755px;\r\n                      }\r\n                    }\r\n\r\n                    .tijeras-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 50px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .tijeras-img {\r\n                        left: 530px;\r\n                      }\r\n                    }\r\n                    `;\n    div.appendChild(style);\n    let boton = div.querySelector(\".boton\");\n    boton.addEventListener(\"click\", (evento)=>{\n        evento.preventDefault();\n        params.goTo(\"./game\");\n    });\n    return div;\n}\n\n\n\nfunction $85f7af2e90239f35$export$e17a77b57ff3c6ab() {\n    let min = 0;\n    let max = 3;\n    let computerJugada;\n    function getRandomArbitrary(min, max) {\n        let random = Math.random() * (max - min) + min;\n        return Math.trunc(random);\n    }\n    let numAleatorio = getRandomArbitrary(min, max);\n    if (numAleatorio == 0) computerJugada = \"piedra\";\n    else if (numAleatorio == 1) computerJugada = \"papel\";\n    else computerJugada = \"tijeras\";\n    return computerJugada;\n}\n\n\nfunction $433a441ce5feaa55$export$645a895ac8797058(params) {\n    const div = document.createElement(\"div\");\n    div.innerHTML = `\r\n                <div class=\"container\">\r\n                    <h1 class=\"container-cuenta-regresiva\"></h1>\r\n                    <tijeras-el class= \"tijeras-img\"></tijeras-el>                \r\n                    <piedra-el class= \"piedra-img\"></piedra-el>\r\n                    <papel-el class= \"papel-img\"></papel-el>\r\n\r\n                </div>\r\n            `;\n    let style = document.createElement(\"style\");\n    style.textContent = `\r\n                        .container {\r\n                            height: 100vh;\r\n                            width: 100%;\r\n                            padding: 0 30px;\r\n                        }\r\n                        \r\n                        @media (min-width: 600px) {\r\n                            .container {\r\n                            height: 80vh;\r\n                            width: 450px;\r\n                            margin: 0 auto;\r\n                            }\r\n                        }\r\n\r\n                        .container-cuenta-regresiva{\r\n                            font-family: \"Poppins\", sans-serif;\r\n                            font-weight: bold;\r\n                            font-size: 256px;\r\n                            text-align: center;\r\n                            color: var(--titulos);\r\n                            margin-top: 100px;\r\n                        }\r\n\r\n                        .piedra-img {\r\n                            height: 150px;\r\n                            position: fixed;\r\n                            bottom: -20px;\r\n                            left: 160px;\r\n                        }\r\n                        @media (min-width: 600px) {\r\n                          .piedra-img {\r\n                            left: 640px;\r\n                          }\r\n                        }\r\n    \r\n                        .papel-img {\r\n                            height: 150px;\r\n                            position: fixed;\r\n                            bottom: -20px;\r\n                            left: 275px;\r\n                        }\r\n                        @media (min-width: 600px) {\r\n                          .papel-img {\r\n                            left: 755px;\r\n                          }\r\n                        }\r\n    \r\n                        .tijeras-img {\r\n                            height: 150px;\r\n                            position: fixed;\r\n                            bottom: -20px;\r\n                            left: 50px;\r\n                        }\r\n                        @media (min-width: 600px) {\r\n                          .tijeras-img {\r\n                            left: 530px;\r\n                          }\r\n                        }\r\n                        \r\n                      `;\n    div.appendChild(style);\n    function timerJugada() {\n        let counter = 0;\n        //este div me mostrara en pantalla la cuenta regresiva\n        const cuentaRegresiva = div.querySelector(\".container-cuenta-regresiva\");\n        const intervalId = setInterval(()=>{\n            counter++;\n            console.log(\"ciclo n\\xfamero\", counter);\n            //Cuenta regresiva\n            /*Creo que el error esta aca, deberia comenzar de 0\r\n      para que no me cuente una jugada extra */ if (counter == 1) cuentaRegresiva.textContent = \"3\";\n            if (counter == 2) cuentaRegresiva.textContent = \"2\";\n            if (counter == 3) cuentaRegresiva.textContent = \"1\";\n            /* Si pasan mas de 3 segundos osea 4 se corta la funcion\r\n      y vuelve a instrucciones porque si llego a 4 significa\r\n      que no eligieron antes de los 4seg */ if (counter > 3) {\n                clearInterval(intervalId);\n                params.goTo(\"./instructions\");\n                alert(\"Se ha terminado el tiempo para seleccionar\");\n            }\n            const piedraEl = document.querySelector(\".piedra-img\");\n            piedraEl.addEventListener(\"click\", (e)=>{\n                e.preventDefault();\n                /*cuando hace click, la jugada elegida, se guarda en el state\r\n        y calcula la jugada de la compu con la funcion computerJuego\r\n        luego guarda la jugada en ultima jugada y pushea la nueva jugada\r\n        en el state de history*/ let myJugada;\n                const newData = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n                const jugadaCompu = (0, $85f7af2e90239f35$export$e17a77b57ff3c6ab)();\n                myJugada = \"piedra\";\n                newData.currentGame.myPlay = myJugada;\n                newData.currentGame.computerPlay = jugadaCompu;\n                (0, $0b89d474933103bc$export$ca000e230c0caa3e).setState(newData);\n                /*Cuando clickea la mano, termina el conteo y va a resultados\r\n        la logica del state queda en el elemento piedra */ clearInterval(intervalId);\n                params.goTo(\"./result\");\n            });\n            const tijerasEl = document.querySelector(\".tijeras-img\");\n            tijerasEl.addEventListener(\"click\", (e)=>{\n                e.preventDefault();\n                /*cuando hace click, la jugada elegida, se guarda en el state\r\n        y calcula la jugada de la compu con la funcion computerJuego\r\n        luego guarda la jugada en ultima jugada y pushea la nueva jugada\r\n        en el state de history*/ let myJugada;\n                const newData = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n                const jugadaCompu = (0, $85f7af2e90239f35$export$e17a77b57ff3c6ab)();\n                myJugada = \"tijeras\";\n                newData.currentGame.myPlay = myJugada;\n                newData.currentGame.computerPlay = jugadaCompu;\n                (0, $0b89d474933103bc$export$ca000e230c0caa3e).setState(newData);\n                /*Cuando clickea la mano, termina el conteo y va a resultados\r\n        la logica del state queda en el elemento tijeras */ clearInterval(intervalId);\n                params.goTo(\"./result\");\n            });\n            const papelEl = document.querySelector(\".papel-img\");\n            papelEl.addEventListener(\"click\", (e)=>{\n                e.preventDefault();\n                /*cuando hace click, la jugada elegida, se guarda en el state\r\n        y calcula la jugada de la compu con la funcion computerJuego\r\n       luego guarda la jugada en ultima jugada y pushea la nueva jugada\r\n       en el state de history*/ let myJugada;\n                const newData = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n                const jugadaCompu = (0, $85f7af2e90239f35$export$e17a77b57ff3c6ab)();\n                myJugada = \"papel\";\n                newData.currentGame.myPlay = myJugada;\n                newData.currentGame.computerPlay = jugadaCompu;\n                (0, $0b89d474933103bc$export$ca000e230c0caa3e).setState(newData);\n                /*Cuando clickea la mano, termina el conteo y va a resultados\r\n    la logica del state queda en el elemento papel */ clearInterval(intervalId);\n                params.goTo(\"./result\");\n            });\n        }, 1000);\n    }\n    timerJugada();\n    return div;\n}\n\n\n\nfunction $ed60d694131b3a0e$export$b4f099f03260cd8c(params) {\n    //invoco la data del state\n    const newData = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n    //guardo la ultima jugada\n    const nuevoGame = newData.currentGame;\n    //este div es que que va a contener la jugada del playe, de la pc\n    //y tambien el boton del score\n    const div = document.createElement(\"div\");\n    div.classList.add(\"container-result\");\n    /*Por cada if verifica que jugo la computadora y el player  \r\n  depende que jugaron se crea un elemento img y se carga la imagen\r\n  correspondiente*/ if (nuevoGame.computerPlay == \"piedra\") {\n        const jugadaCompuImgEl = document.createElement(\"img\");\n        jugadaCompuImgEl.src = \"https://marianoaguilar13.github.io/imagenes-proyecto-final/piedra-invertido.png\";\n        jugadaCompuImgEl.classList.add(\"jugada-compu\");\n        div.appendChild(jugadaCompuImgEl);\n    }\n    if (nuevoGame.computerPlay == \"papel\") {\n        const jugadaCompuImgEl = document.createElement(\"img\");\n        jugadaCompuImgEl.src = \"https://marianoaguilar13.github.io/imagenes-proyecto-final/papel-invertido.png\";\n        jugadaCompuImgEl.classList.add(\"jugada-compu\");\n        div.appendChild(jugadaCompuImgEl);\n    }\n    if (nuevoGame.computerPlay == \"tijeras\") {\n        const jugadaCompuImgEl = document.createElement(\"img\");\n        jugadaCompuImgEl.src = \"https://marianoaguilar13.github.io/imagenes-proyecto-final/tijera-invertido.png\";\n        jugadaCompuImgEl.classList.add(\"jugada-compu\");\n        div.appendChild(jugadaCompuImgEl);\n    }\n    const botonVerScoreEl = document.createElement(\"div\");\n    div.classList.add(\"container-boton\");\n    botonVerScoreEl.innerHTML = `\r\n        <button-normal-el class=\"boton\"> Ver Score </button-normal-el>\r\n        `;\n    div.appendChild(botonVerScoreEl);\n    if (nuevoGame.myPlay == \"piedra\") {\n        const jugadaPlayerImgEl = document.createElement(\"img\");\n        jugadaPlayerImgEl.src = \"https://marianoaguilar13.github.io/imagenes-proyecto-final/piedra.svg\";\n        jugadaPlayerImgEl.classList.add(\"jugada-player\");\n        div.appendChild(jugadaPlayerImgEl);\n    }\n    if (nuevoGame.myPlay == \"papel\") {\n        const jugadaPlayerImgEl = document.createElement(\"img\");\n        jugadaPlayerImgEl.src = \"https://marianoaguilar13.github.io/imagenes-proyecto-final/papel.svg\";\n        jugadaPlayerImgEl.classList.add(\"jugada-player\");\n        div.appendChild(jugadaPlayerImgEl);\n    }\n    if (nuevoGame.myPlay == \"tijeras\") {\n        const jugadaPlayerImgEl = document.createElement(\"img\");\n        jugadaPlayerImgEl.src = \"https://marianoaguilar13.github.io/imagenes-proyecto-final/tijera.svg\";\n        jugadaPlayerImgEl.classList.add(\"jugada-player\");\n        div.appendChild(jugadaPlayerImgEl);\n    }\n    let style = document.createElement(\"style\");\n    style.textContent = `\r\n                        .container-result {\r\n                          display: flex;\r\n                          min-height: 100vh;\r\n                          width: 100%;\r\n                          justify-content: space-between;\r\n                          flex-direction: column;\r\n                          align-content: center;\r\n                        }\r\n                        \r\n                        @media (min-width: 600px) {\r\n                          .container-result {\r\n                            \r\n                            height: 650px;\r\n                            max-width: 450px;\r\n                            margin: 0 auto;\r\n                          }\r\n                        }\r\n\r\n                        .container-boton{\r\n                          display: flex;\r\n                          width: 100%;\r\n                        }\r\n                        \r\n                        .boton {\r\n                          width:100%;\r\n                         \r\n                        }\r\n                        \r\n                        .jugada-compu {\r\n                          height: 300px;\r\n                          align-self: center;\r\n                          margin-bottom: 20px;\r\n                        }\r\n                        \r\n                        .jugada-player {\r\n                          height: 300px;\r\n                          align-self: center;\r\n                          margin-top: 20px;\r\n                        }\r\n                        \r\n                        \r\n                      `;\n    div.appendChild(style);\n    const botonScoreEl = div.querySelector(\".boton\");\n    if (botonScoreEl != null) botonScoreEl.addEventListener(\"click\", (e)=>{\n        e.preventDefault();\n        params.goTo(\"./result-score\");\n    });\n    return div;\n}\n\n\n\nfunction $f75cee944f477cac$export$cab1ce1c4219dafc(params) {\n    const div = document.createElement(\"div\");\n    //me traigo la data de la ultima jugada para setearla en el historial\n    const dataForPushHistory = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n    let playToPush = {\n        computerPlay: dataForPushHistory.currentGame.computerPlay,\n        myPlay: dataForPushHistory.currentGame.myPlay\n    };\n    (0, $0b89d474933103bc$export$ca000e230c0caa3e).pushToHistory(playToPush);\n    const newData = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n    //guardo el ultimo game y las jugadas del ultimo game\n    const nuevoGame = newData.currentGame;\n    const jugadaCompu = nuevoGame.computerPlay;\n    const jugadaPlayer = nuevoGame.myPlay;\n    //whoWins es un metodo del state que nos permite ver quien gano\n    //pasandole 2 jugadas, luego guardo ese resultado\n    const resultMatch = (0, $0b89d474933103bc$export$ca000e230c0caa3e).whoWins(jugadaPlayer, jugadaCompu);\n    //me guardo el historial para recorrer y calcular el score total\n    const historyRecorrer = newData.history;\n    console.log(\"el historial\", historyRecorrer);\n    let winCompu = 0;\n    let winPlayer = 0;\n    //recorro el historial y veo quien gano cada game, luego las victorias\n    //del player las guardo en una variable y las de la pc tambien\n    for (const gameActual of historyRecorrer){\n        console.log(gameActual);\n        const playCompu = gameActual.computerPlay;\n        const playPlayer = gameActual.myPlay;\n        const result = (0, $0b89d474933103bc$export$ca000e230c0caa3e).whoWins(playPlayer, playCompu);\n        if (result == \"Victoria\") winPlayer++;\n        if (result == \"Derrota\") winCompu++;\n    }\n    //aca muestro con resultMatch, con winPlayer y WinCompu, quien\n    //gano la ultima partida y cuantas victorias de cada uno\n    div.innerHTML = `\r\n    <div class=\"container\">\r\n        <result-escore-el quienGano=\"${resultMatch}\" numVos=\"${winPlayer}\" numMaquina=\"${winCompu}\" ></result-escore-el>\r\n        <button-normal-el class=\"boton-volver boton\">Volver a Jugar</button-normal-el>\r\n        <button-normal-el class=\"boton-reinicio boton\">Reiniciar Score</button-normal-el>\r\n    </div>\r\n        `;\n    let style = document.createElement(\"style\");\n    style.textContent = `\r\n                          .container {\r\n                              height: 100vh;\r\n                              width: 100%;\r\n                              \r\n                          }\r\n                          \r\n                          @media (min-width: 600px) {\r\n                              .container {\r\n                              min-height: 80vh;\r\n                              width: 450px;\r\n                              margin: 0 auto;\r\n                              }\r\n                          }\r\n\r\n                          .boton {\r\n                            margin: 10px;\r\n                          }\r\n                          \r\n                         \r\n                        `;\n    div.appendChild(style);\n    //este boton vuelve a instrucciones para comenzar un nuevo game\n    const botonVolverEl = div.querySelector(\".boton-volver\");\n    botonVolverEl.addEventListener(\"click\", (e)=>{\n        e.preventDefault();\n        params.goTo(\"./instructions\");\n    });\n    //con este boton reiniciamos el historial\n    const botonReinicioEl = div.querySelector(\".boton-reinicio\");\n    botonReinicioEl.addEventListener(\"click\", (e)=>{\n        e.preventDefault();\n        const newData = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n        newData.history = [\n            {}\n        ];\n        (0, $0b89d474933103bc$export$ca000e230c0caa3e).setState(newData);\n        params.goTo(\"./instructions\");\n    });\n    return div;\n}\n\n\n//Este es el nombre base de la pag de github\nconst $e817d3341cf3ea9c$var$BASE_PATH = \"/piedra-papel-tijeras\";\n/*Establezco las diferentes rutas y dependiendo la ruta es la pag\r\nque va a cargar, estas paginas estan en la carpeta pages */ function $e817d3341cf3ea9c$var$isGithubPages() {\n    return location.host.includes(\"github.io\");\n}\nconst $e817d3341cf3ea9c$var$routes = [\n    {\n        path: /\\//,\n        component: (0, $5e365b6ace611e18$export$89c746873e8678ad)\n    },\n    {\n        path: /\\/welcome/,\n        component: (0, $5e365b6ace611e18$export$89c746873e8678ad)\n    },\n    {\n        path: /\\/instructions/,\n        component: (0, $1905f0a06a008413$export$82ce9ed5e3451720)\n    },\n    {\n        path: /\\/game/,\n        component: (0, $433a441ce5feaa55$export$645a895ac8797058)\n    },\n    {\n        path: /\\/result/,\n        component: (0, $ed60d694131b3a0e$export$b4f099f03260cd8c)\n    },\n    {\n        path: /\\/result-score/,\n        component: (0, $f75cee944f477cac$export$cab1ce1c4219dafc)\n    }\n];\nfunction $e817d3341cf3ea9c$export$cf7ee87ede64229c(container) {\n    function goTo(path) {\n        const completePath = $e817d3341cf3ea9c$var$isGithubPages() ? $e817d3341cf3ea9c$var$BASE_PATH + path : path;\n        history.pushState({}, \"\", completePath);\n        handleRoute(completePath);\n    }\n    function handleRoute(route) {\n        console.log(\"El handleRoute recibi\\xf3 una nueva ruta \", route);\n        const newRoute = $e817d3341cf3ea9c$var$isGithubPages() ? route.replace($e817d3341cf3ea9c$var$BASE_PATH, \"\") : route;\n        for (const r of $e817d3341cf3ea9c$var$routes)if (r.path.test(newRoute)) {\n            const el = r.component({\n                goTo: goTo\n            });\n            while(container.firstChild)container.removeChild(container.firstChild);\n            container.appendChild(el);\n        }\n    }\n    handleRoute(location.pathname);\n    //onpopstate se fija que pasa en el estate cuando se vulve para atras\n    //despues vuelve a llamar al handleRoute con la ruta que esta al volver en el history\n    window.onpopstate = function(event) {\n        handleRoute(location.pathname);\n    };\n}\n\n\nfunction $ef37f8ccee021b5c$export$2cd8252107eb640b() {\n    class ButtonNormalEl extends HTMLElement {\n        constructor(){\n            super();\n            this.shadow = this.attachShadow({\n                mode: \"open\"\n            });\n            this.render();\n        }\n        render() {\n            //creo el style, que solo puede ser usados por elementos del header-el\n            let style = document.createElement(\"style\");\n            style.textContent = `\r\n                    .boton {\r\n                        border: solid 5px;\r\n                        border-color: var(--azul-borde);\r\n                        border-radius: 10px;\r\n                        height: 80px;\r\n                        width: 100%;\r\n                        font-family: \"Odibee Sans\", cursive;\r\n                        font-weight: 400;\r\n                        font-size: 36px;\r\n                        background-color: var(--azul-boton);\r\n                        color: whitesmoke;\r\n                        margin-top: 20px;\r\n                    }\r\n                        \r\n                `;\n            const buttonEl = document.createElement(\"button\");\n            buttonEl.classList.add(\"boton\");\n            buttonEl.textContent = this.textContent;\n            this.shadow.appendChild(buttonEl);\n            this.shadow.appendChild(style);\n        }\n    }\n    customElements.define(\"button-normal-el\", ButtonNormalEl);\n}\n\n\nfunction $397ac6e1c42ef9fd$export$2cd8252107eb640b() {\n    class PapelEl extends HTMLElement {\n        constructor(){\n            super();\n            this.shadow = this.attachShadow({\n                mode: \"open\"\n            });\n            this.render();\n        }\n        render() {\n            //creo el style, que solo puede ser usados por elementos del header-el\n            let style = document.createElement(\"style\");\n            style.textContent = `\r\n                           \r\n                  `;\n            this.shadow.innerHTML = `\r\n        <img class=\"papel-img\" src=\"https://marianoaguilar13.github.io/imagenes-proyecto-final/papel.svg\" alt=\"papel\" />\r\n    `;\n            this.shadow.appendChild(style);\n        }\n    }\n    customElements.define(\"papel-el\", PapelEl);\n}\n\n\nfunction $0a796e4676a73863$export$2cd8252107eb640b() {\n    class PiedraEl extends HTMLElement {\n        constructor(){\n            super();\n            this.shadow = this.attachShadow({\n                mode: \"open\"\n            });\n            this.render();\n        }\n        render() {\n            //creo el style, que solo puede ser usados por elementos del header-el\n            let style = document.createElement(\"style\");\n            style.textContent = `\r\n                                                  \r\n                    `;\n            this.shadow.innerHTML = `\r\n          <img class=\"piedra-img\" src=\"https://marianoaguilar13.github.io/imagenes-proyecto-final/piedra.svg\" alt=\"piedra\" />\r\n      `;\n            this.shadow.appendChild(style);\n        }\n    }\n    customElements.define(\"piedra-el\", PiedraEl);\n}\n\n\nfunction $4f98d9153353d1df$export$2cd8252107eb640b() {\n    class TijerasEl extends HTMLElement {\n        constructor(){\n            super();\n            this.shadow = this.attachShadow({\n                mode: \"open\"\n            });\n            this.render();\n        }\n        render() {\n            //creo el style, que solo puede ser usados por elementos del header-el\n            let style = document.createElement(\"style\");\n            style.textContent = `                       \r\n                          \r\n                      `;\n            this.shadow.innerHTML = `\r\n            <img class=\"tijeras-img\" src=\"https://marianoaguilar13.github.io/imagenes-proyecto-final/tijera.svg\" alt=\"tijeras\" />\r\n        `;\n            this.shadow.appendChild(style);\n        }\n    }\n    customElements.define(\"tijeras-el\", TijerasEl);\n}\n\n\nfunction $b90f7f2961179770$export$2cd8252107eb640b() {\n    class ResultEscoreEl extends HTMLElement {\n        //estos son los atributos que voy a estar obsevando su cambios\n        static get observedAttributes() {\n            return [\n                \"quienGano\",\n                \"numVos\",\n                \"numMaquina\"\n            ];\n        }\n        constructor(){\n            // Always call super first in constructor\n            super();\n            this.shadow = this.attachShadow({\n                mode: \"open\"\n            });\n            this.render();\n        }\n        //creo el style del customElement\n        render() {\n            let style = document.createElement(\"style\");\n            style.textContent = `\r\n      .container-page {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        margin: 40px auto;\r\n      }\r\n      \r\n      @media (min-width: 600px) {\r\n        .container-page {\r\n          display: flex;\r\n          flex-direction: column;\r\n          width: 450px;\r\n          margin: 20px auto;\r\n        }\r\n      }\r\n      \r\n      .resultado-titulo {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 72px;\r\n        text-align: center;\r\n        color: black;\r\n        margin-top: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n      \r\n      .container-score {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 80%;\r\n        padding: 0 20px;\r\n        margin: 40px auto;\r\n        border: solid 10px black;\r\n        border-radius: 10px;\r\n        justify-content: space-evenly;\r\n      }\r\n      \r\n      .score-titulo {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 48px;\r\n        text-align: center;\r\n        color: var(--titulos);\r\n        margin-top: 0;\r\n        margin-bottom: 0;\r\n      }\r\n      \r\n      .lista-score {\r\n        list-style-type: none;\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 32px;\r\n        text-align: center;\r\n        color: var(--titulos);\r\n      }\r\n      \r\n      .li-score-vos {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 32px;\r\n        text-align: end;\r\n        color: var(--titulos);\r\n      }\r\n\r\n      .li-score-maquina {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 32px;\r\n        text-align: end;\r\n        color: var(--titulos);\r\n      }\r\n      `;\n            //creo la estructura del customElement\n            this.shadow.innerHTML = `\r\n            <div class=\"container-page\">\r\n                <h3 class=\"resultado-titulo\"></h3>\r\n                <div class=\"container-score\">\r\n                    <h3 class=\"score-titulo\">Score</h3>\r\n                    <ul class=\"lista-score\">\r\n                      <li class=\"li-score-vos\">vos: </li>\r\n                      <li class=\"li-score-maquina\">compu: </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n  `;\n            const tituloEl = this.shadow.querySelector(\".resultado-titulo\");\n            tituloEl.textContent = this.getAttribute(\"quienGano\");\n            const scoreVosEl = this.shadow.querySelector(\".li-score-vos\");\n            scoreVosEl.textContent = scoreVosEl.textContent + this.getAttribute(\"numVos\");\n            const scoreMaquinaEl = this.shadow.querySelector(\".li-score-maquina\");\n            scoreMaquinaEl.textContent = scoreMaquinaEl.textContent + this.getAttribute(\"numMaquina\");\n            this.shadow.appendChild(style);\n        }\n    }\n    customElements.define(\"result-escore-el\", ResultEscoreEl);\n}\n\n\n(function() {\n    (0, $ef37f8ccee021b5c$export$2cd8252107eb640b)();\n    (0, $397ac6e1c42ef9fd$export$2cd8252107eb640b)();\n    (0, $0a796e4676a73863$export$2cd8252107eb640b)();\n    (0, $4f98d9153353d1df$export$2cd8252107eb640b)();\n    (0, $b90f7f2961179770$export$2cd8252107eb640b)();\n    /* El localStorage, \"history\" se suscribe en el state, para que este\r\n  el history se mantenga actualizado con el historial */ (0, $0b89d474933103bc$export$ca000e230c0caa3e).subscribe(()=>{\n        const actualState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n        const historyStingifeado = JSON.stringify(actualState.history);\n        localStorage.setItem(\"history\", historyStingifeado);\n    });\n    /*Cuando ingresa a la pag si tiene un historial guardao el localstorage\r\n  entonces lo carga al state para que tenga el historial de jugadas actualizado */ if (localStorage.getItem(\"history\")) {\n        let historialDeJugadas = {\n            currentGame: {\n                computerPlay: \"\",\n                myPlay: \"\"\n            },\n            history: JSON.parse(localStorage.getItem(\"history\") || \"hola\")\n        };\n        (0, $0b89d474933103bc$export$ca000e230c0caa3e).setState(historialDeJugadas);\n    }\n    /* Inicia el initRouter para cargar los elementos*/ const root = document.querySelector(\".root\");\n    (0, $e817d3341cf3ea9c$export$cf7ee87ede64229c)(root);\n})();\n\n\n//# sourceMappingURL=index.88e45496.js.map\n","import { state } from \"./state\";\r\nimport { initRouter } from \"./router\";\r\n\r\nimport { init as initButtonNormalEl } from \"./components/boton-normal-el\";\r\nimport { init as initPapelEl } from \"./components/papel-el\";\r\nimport { init as initPiedraEl } from \"./components/piedra-el\";\r\nimport { init as initTijerasEl } from \"./components/tijeras-el\";\r\nimport { init as initResultScoreEl } from \"./components/result-score-el\";\r\n\r\n(function () {\r\n  initButtonNormalEl();\r\n  initPapelEl();\r\n  initPiedraEl();\r\n  initTijerasEl();\r\n  initResultScoreEl();\r\n\r\n  /* El localStorage, \"history\" se suscribe en el state, para que este\r\n  el history se mantenga actualizado con el historial */\r\n\r\n  state.subscribe(() => {\r\n    const actualState = state.getState();\r\n    const historyStingifeado = JSON.stringify(actualState.history);\r\n    localStorage.setItem(\"history\", historyStingifeado);\r\n  });\r\n\r\n  /*Cuando ingresa a la pag si tiene un historial guardao el localstorage\r\n  entonces lo carga al state para que tenga el historial de jugadas actualizado */\r\n  if (localStorage.getItem(\"history\")!) {\r\n    let historialDeJugadas = {\r\n      currentGame: {\r\n        computerPlay: \"\",\r\n        myPlay: \"\",\r\n      },\r\n\r\n      history: JSON.parse(localStorage.getItem(\"history\") || \"hola\"),\r\n    };\r\n    state.setState(historialDeJugadas);\r\n  }\r\n\r\n  /* Inicia el initRouter para cargar los elementos*/\r\n  const root = document.querySelector(\".root\") as any;\r\n  initRouter(root);\r\n})();\r\n","type Jugada = \"piedra\" | \"papel\" | \"tijeras\";\r\ntype Game = {\r\n  computerPlay: Jugada;\r\n  myPlay: Jugada;\r\n};\r\n\r\nconst state = {\r\n  data: {\r\n    currentGame: {\r\n      computerPlay: \"\",\r\n      myPlay: \"\",\r\n    },\r\n\r\n    history: [],\r\n  },\r\n\r\n  listeners: [],\r\n\r\n  setMove(move: Jugada) {\r\n    const currentState = this.getState();\r\n    currentState.currentGame.myPlay;\r\n  },\r\n\r\n  whoWins(myPlay: Jugada, computerPlay: Jugada) {\r\n    //cada constante evalua si el && devuelve true, dependiendo\r\n    //de myPlay y computerPlay enviada por parametro\r\n    const ganeConTijeras = myPlay == \"tijeras\" && computerPlay == \"papel\";\r\n    const ganeConPiedra = myPlay == \"piedra\" && computerPlay == \"tijeras\";\r\n    const ganeConPapel = myPlay == \"papel\" && computerPlay == \"piedra\";\r\n\r\n    const gane = [ganeConTijeras, ganeConPiedra, ganeConPapel].includes(true);\r\n\r\n    const perdiConTijeras = myPlay == \"tijeras\" && computerPlay == \"piedra\";\r\n    const perdiConPiedra = myPlay == \"piedra\" && computerPlay == \"papel\";\r\n    const perdiConPapel = myPlay == \"papel\" && computerPlay == \"tijeras\";\r\n\r\n    const perdi = [perdiConPapel, perdiConPiedra, perdiConTijeras].includes(\r\n      true\r\n    );\r\n\r\n    if (perdi == true) {\r\n      return \"Derrota\";\r\n    } else {\r\n      if (gane == true) {\r\n        return \"Victoria\";\r\n      } else {\r\n        return \"Empate\";\r\n      }\r\n    }\r\n  },\r\n\r\n  /*Aca pushea la nueva jugada acumulandola en el historial de jugada\r\n  ya que este historial es que se va a recorrer para calcular el score */\r\n\r\n  pushToHistory(play: Game) {\r\n    const currentState = this.getState();\r\n    currentState.history.push(play);\r\n    const historyStingifeado = JSON.stringify(currentState.history);\r\n    localStorage.setItem(\"history\", historyStingifeado);\r\n    this.setState(currentState);\r\n  },\r\n\r\n  //devuelve la data del ultimo state\r\n  getState() {\r\n    return this.data;\r\n  },\r\n\r\n  subscribe(callback: (any) => any) {\r\n    // recibe callbacks para ser avisados posteriormente\r\n    this.listeners.push(callback);\r\n  },\r\n\r\n  setState(newState) {\r\n    // modifica this.data (el state) e invoca los callbacks\r\n    this.data = newState;\r\n    //cb de callback\r\n    //cada vez que se modifica el state se ejecutan los cb suscriptos\r\n    for (const cb of this.listeners) {\r\n      cb();\r\n    }\r\n  },\r\n};\r\n\r\nexport { state };\r\n","import { initPageWelcome } from \"./pages/welcome/index\";\r\nimport { initPageInstructions } from \"./pages/instructions/index\";\r\nimport { initPageGame } from \"./pages/game/index\";\r\nimport { initPageResult } from \"./pages/result/index\";\r\nimport { initPageResultScore } from \"./pages/result-score/index\";\r\n\r\n//Este es el nombre base de la pag de github\r\nconst BASE_PATH = \"/piedra-papel-tijeras\";\r\n\r\n/*Establezco las diferentes rutas y dependiendo la ruta es la pag\r\nque va a cargar, estas paginas estan en la carpeta pages */\r\n\r\nfunction isGithubPages() {\r\n  return location.host.includes(\"github.io\");\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    path: /\\//,\r\n    component: initPageWelcome,\r\n  },\r\n  {\r\n    path: /\\/welcome/,\r\n    component: initPageWelcome,\r\n  },\r\n  {\r\n    path: /\\/instructions/,\r\n    component: initPageInstructions,\r\n  },\r\n  {\r\n    path: /\\/game/,\r\n    component: initPageGame,\r\n  },\r\n  {\r\n    path: /\\/result/,\r\n    component: initPageResult,\r\n  },\r\n  {\r\n    path: /\\/result-score/,\r\n    component: initPageResultScore,\r\n  },\r\n];\r\n\r\nexport function initRouter(container: Element) {\r\n  function goTo(path) {\r\n    const completePath = isGithubPages() ? BASE_PATH + path : path;\r\n    history.pushState({}, \"\", completePath);\r\n    handleRoute(completePath);\r\n  }\r\n\r\n  function handleRoute(route) {\r\n    console.log(\"El handleRoute recibió una nueva ruta \", route);\r\n\r\n    const newRoute = isGithubPages() ? route.replace(BASE_PATH, \"\") : route;\r\n\r\n    for (const r of routes) {\r\n      if (r.path.test(newRoute)) {\r\n        const el = r.component({ goTo: goTo });\r\n\r\n        while (container.firstChild) {\r\n          container.removeChild(container.firstChild);\r\n        }\r\n\r\n        container.appendChild(el);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRoute(location.pathname);\r\n\r\n  //onpopstate se fija que pasa en el estate cuando se vulve para atras\r\n  //despues vuelve a llamar al handleRoute con la ruta que esta al volver en el history\r\n  window.onpopstate = function (event) {\r\n    handleRoute(location.pathname);\r\n  };\r\n}\r\n","export function initPageWelcome(params) {\r\n  const div = document.createElement(\"div\");\r\n  div.innerHTML = `\r\n            <div class=\"container\">\r\n                <h1 class=\"titulo\">Piedra, Papel o Tijera</h1>\r\n                <button-normal-el class=\"boton\"> Empezar </button-normal-el>\r\n                <tijeras-el class= \"tijeras-img\"></tijeras-el>                \r\n                <piedra-el class= \"piedra-img\"></piedra-el>\r\n                <papel-el class= \"papel-img\"></papel-el>\r\n\r\n            </div>\r\n        `;\r\n\r\n  let style = document.createElement(\"style\");\r\n  style.textContent = `\r\n                    .container {\r\n                        height: 100vh;\r\n                        width: 100%;\r\n                        padding: 0 30px;\r\n                    }\r\n                    \r\n                    @media (min-width: 600px) {\r\n                        .container {\r\n                        height: 80vh;\r\n                        width: 450px;\r\n                        margin: 0 auto;\r\n                        }\r\n                    }\r\n                    \r\n                    .titulo {\r\n                        font-family: \"Poppins\", sans-serif;\r\n                        font-weight: bold;\r\n                        font-size: 72px;\r\n                        text-align: center;\r\n                        color: var(--titulos);\r\n                        margin-top: 60px;\r\n                        margin-bottom: 80px;\r\n                    }\r\n                    \r\n                    @media (min-width: 600px) {\r\n                        .titulo {\r\n                        font-family: \"Poppins\", sans-serif;\r\n                        font-weight: bold;\r\n                        font-size: 60px;\r\n                        text-align: center;\r\n                        color: var(--titulos);\r\n                        margin-top: 60px;\r\n                        margin-bottom: 40px;\r\n                        }\r\n                    }\r\n                    \r\n                    .piedra-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 160px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .piedra-img {\r\n                        left: 640px;\r\n                      }\r\n                    }\r\n\r\n                    .papel-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 275px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .papel-img {\r\n                        left: 755px;\r\n                      }\r\n                    }\r\n\r\n                    .tijeras-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 50px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .tijeras-img {\r\n                        left: 530px;\r\n                      }\r\n                    }\r\n                  `;\r\n  div.appendChild(style);\r\n\r\n  const boton = div.querySelector(\".boton\") as any;\r\n  boton.addEventListener(\"click\", (evento) => {\r\n    evento.preventDefault();\r\n    params.goTo(\"./instructions\");\r\n  });\r\n\r\n  return div;\r\n}\r\n","export function initPageInstructions(params) {\r\n  const div = document.createElement(\"div\");\r\n  div.innerHTML = `\r\n              <div class=\"container\">\r\n                  <h3 class=\"texto-instructions\">Presioná jugar\r\n                  y elegí: piedra, papel o tijera antes de que pasen los 3 segundos.</h3>\r\n                  <button-normal-el class=\"boton\"> ¡Jugar! </button-normal-el>\r\n                  <tijeras-el class= \"tijeras-img\"></tijeras-el>                \r\n                  <piedra-el class= \"piedra-img\"></piedra-el>\r\n                  <papel-el class= \"papel-img\"></papel-el>\r\n              </div>\r\n          `;\r\n\r\n  let style = document.createElement(\"style\");\r\n  style.textContent = `\r\n                      .container {\r\n                          height: 100vh;\r\n                          width: 100%;\r\n                          padding: 0 30px;\r\n                      }\r\n                      \r\n                      @media (min-width: 600px) {\r\n                          .container {\r\n                          height: 80vh;\r\n                          width: 450px;\r\n                          margin: 0 auto;\r\n                          }\r\n                      }\r\n                      \r\n                      .texto-instructions {\r\n                          font-family: \"Poppins\", sans-serif;\r\n                          font-weight: 700;\r\n                          font-size: 36px;\r\n                          text-align: center;\r\n                          color: black;\r\n                          margin-top: 40px;\r\n                          margin-bottom: 60px;\r\n                      }\r\n                      \r\n                      @media (min-width: 600px) {\r\n                          .texto-instructions {               \r\n                          font-size: 36px;                         \r\n                          margin-top: 40px;\r\n                          margin-bottom: 60px;\r\n                          }\r\n                      } \r\n                      \r\n                      .piedra-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 160px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .piedra-img {\r\n                        left: 640px;\r\n                      }\r\n                    }\r\n\r\n                    .papel-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 275px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .papel-img {\r\n                        left: 755px;\r\n                      }\r\n                    }\r\n\r\n                    .tijeras-img {\r\n                        height: 150px;\r\n                        position: fixed;\r\n                        bottom: -50px;\r\n                        left: 50px;\r\n                    }\r\n                    @media (min-width: 600px) {\r\n                      .tijeras-img {\r\n                        left: 530px;\r\n                      }\r\n                    }\r\n                    `;\r\n  div.appendChild(style);\r\n\r\n  let boton = div.querySelector(\".boton\") as any;\r\n  boton.addEventListener(\"click\", (evento) => {\r\n    evento.preventDefault();\r\n    params.goTo(\"./game\");\r\n  });\r\n\r\n  return div;\r\n}\r\n","import { state } from \"../../state\";\r\nimport { computerJuego } from \"../../computerPlay\";\r\n\r\nexport function initPageGame(params) {\r\n  type Jugada = \"piedra\" | \"papel\" | \"tijeras\";\r\n\r\n  const div = document.createElement(\"div\");\r\n  div.innerHTML = `\r\n                <div class=\"container\">\r\n                    <h1 class=\"container-cuenta-regresiva\"></h1>\r\n                    <tijeras-el class= \"tijeras-img\"></tijeras-el>                \r\n                    <piedra-el class= \"piedra-img\"></piedra-el>\r\n                    <papel-el class= \"papel-img\"></papel-el>\r\n\r\n                </div>\r\n            `;\r\n\r\n  let style = document.createElement(\"style\");\r\n  style.textContent = `\r\n                        .container {\r\n                            height: 100vh;\r\n                            width: 100%;\r\n                            padding: 0 30px;\r\n                        }\r\n                        \r\n                        @media (min-width: 600px) {\r\n                            .container {\r\n                            height: 80vh;\r\n                            width: 450px;\r\n                            margin: 0 auto;\r\n                            }\r\n                        }\r\n\r\n                        .container-cuenta-regresiva{\r\n                            font-family: \"Poppins\", sans-serif;\r\n                            font-weight: bold;\r\n                            font-size: 256px;\r\n                            text-align: center;\r\n                            color: var(--titulos);\r\n                            margin-top: 100px;\r\n                        }\r\n\r\n                        .piedra-img {\r\n                            height: 150px;\r\n                            position: fixed;\r\n                            bottom: -20px;\r\n                            left: 160px;\r\n                        }\r\n                        @media (min-width: 600px) {\r\n                          .piedra-img {\r\n                            left: 640px;\r\n                          }\r\n                        }\r\n    \r\n                        .papel-img {\r\n                            height: 150px;\r\n                            position: fixed;\r\n                            bottom: -20px;\r\n                            left: 275px;\r\n                        }\r\n                        @media (min-width: 600px) {\r\n                          .papel-img {\r\n                            left: 755px;\r\n                          }\r\n                        }\r\n    \r\n                        .tijeras-img {\r\n                            height: 150px;\r\n                            position: fixed;\r\n                            bottom: -20px;\r\n                            left: 50px;\r\n                        }\r\n                        @media (min-width: 600px) {\r\n                          .tijeras-img {\r\n                            left: 530px;\r\n                          }\r\n                        }\r\n                        \r\n                      `;\r\n  div.appendChild(style);\r\n\r\n  function timerJugada() {\r\n    let counter = 0;\r\n\r\n    //este div me mostrara en pantalla la cuenta regresiva\r\n    const cuentaRegresiva = div.querySelector(\r\n      \".container-cuenta-regresiva\"\r\n    ) as any;\r\n\r\n    const intervalId = setInterval(() => {\r\n      counter++;\r\n\r\n      console.log(\"ciclo número\", counter);\r\n\r\n      //Cuenta regresiva\r\n      /*Creo que el error esta aca, deberia comenzar de 0\r\n      para que no me cuente una jugada extra */\r\n\r\n      if (counter == 1) {\r\n        cuentaRegresiva.textContent = \"3\";\r\n      }\r\n      if (counter == 2) {\r\n        cuentaRegresiva.textContent = \"2\";\r\n      }\r\n      if (counter == 3) {\r\n        cuentaRegresiva.textContent = \"1\";\r\n      }\r\n\r\n      /* Si pasan mas de 3 segundos osea 4 se corta la funcion\r\n      y vuelve a instrucciones porque si llego a 4 significa\r\n      que no eligieron antes de los 4seg */\r\n      if (counter > 3) {\r\n        clearInterval(intervalId);\r\n        params.goTo(\"./instructions\");\r\n        alert(\"Se ha terminado el tiempo para seleccionar\");\r\n      }\r\n\r\n      const piedraEl = document.querySelector(\".piedra-img\") as any;\r\n\r\n      piedraEl.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n\r\n        /*cuando hace click, la jugada elegida, se guarda en el state\r\n        y calcula la jugada de la compu con la funcion computerJuego\r\n        luego guarda la jugada en ultima jugada y pushea la nueva jugada\r\n        en el state de history*/\r\n\r\n        let myJugada: Jugada;\r\n        const newData = state.getState();\r\n        const jugadaCompu = computerJuego();\r\n        myJugada = \"piedra\";\r\n        newData.currentGame.myPlay = myJugada;\r\n        newData.currentGame.computerPlay = jugadaCompu;\r\n\r\n        state.setState(newData);\r\n\r\n        /*Cuando clickea la mano, termina el conteo y va a resultados\r\n        la logica del state queda en el elemento piedra */\r\n        clearInterval(intervalId);\r\n        params.goTo(\"./result\");\r\n      });\r\n\r\n      const tijerasEl = document.querySelector(\".tijeras-img\") as any;\r\n\r\n      tijerasEl.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        /*cuando hace click, la jugada elegida, se guarda en el state\r\n        y calcula la jugada de la compu con la funcion computerJuego\r\n        luego guarda la jugada en ultima jugada y pushea la nueva jugada\r\n        en el state de history*/\r\n\r\n        let myJugada: Jugada;\r\n        const newData = state.getState();\r\n        const jugadaCompu = computerJuego();\r\n        myJugada = \"tijeras\";\r\n        newData.currentGame.myPlay = myJugada;\r\n        newData.currentGame.computerPlay = jugadaCompu;\r\n\r\n        state.setState(newData);\r\n\r\n        /*Cuando clickea la mano, termina el conteo y va a resultados\r\n        la logica del state queda en el elemento tijeras */\r\n        clearInterval(intervalId);\r\n        params.goTo(\"./result\");\r\n      });\r\n\r\n      const papelEl = document.querySelector(\".papel-img\") as any;\r\n\r\n      papelEl.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        /*cuando hace click, la jugada elegida, se guarda en el state\r\n        y calcula la jugada de la compu con la funcion computerJuego\r\n       luego guarda la jugada en ultima jugada y pushea la nueva jugada\r\n       en el state de history*/\r\n\r\n        let myJugada: Jugada;\r\n        const newData = state.getState();\r\n        const jugadaCompu = computerJuego();\r\n        myJugada = \"papel\";\r\n        newData.currentGame.myPlay = myJugada;\r\n        newData.currentGame.computerPlay = jugadaCompu;\r\n\r\n        state.setState(newData);\r\n\r\n        /*Cuando clickea la mano, termina el conteo y va a resultados\r\n    la logica del state queda en el elemento papel */\r\n        clearInterval(intervalId);\r\n        params.goTo(\"./result\");\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  timerJugada();\r\n\r\n  return div;\r\n}\r\n","export function computerJuego() {\r\n  /*Esta funcion genera \"aleatoriamente\" una jugada de la compu\r\n  para que despues matchee con la del player */\r\n\r\n  type Jugada = \"piedra\" | \"papel\" | \"tijeras\";\r\n\r\n  let min = 0;\r\n  let max = 3;\r\n  let computerJugada: Jugada;\r\n\r\n  function getRandomArbitrary(min, max) {\r\n    let random = Math.random() * (max - min) + min;\r\n    return Math.trunc(random);\r\n  }\r\n\r\n  let numAleatorio = getRandomArbitrary(min, max);\r\n\r\n  if (numAleatorio == 0) {\r\n    computerJugada = \"piedra\";\r\n  } else {\r\n    if (numAleatorio == 1) {\r\n      computerJugada = \"papel\";\r\n    } else {\r\n      computerJugada = \"tijeras\";\r\n    }\r\n  }\r\n\r\n  return computerJugada;\r\n}\r\n","import { state } from \"../../state\";\r\n\r\nexport function initPageResult(params) {\r\n  //invoco la data del state\r\n  const newData = state.getState();\r\n\r\n  //guardo la ultima jugada\r\n  const nuevoGame = newData.currentGame;\r\n\r\n  //este div es que que va a contener la jugada del playe, de la pc\r\n  //y tambien el boton del score\r\n  const div = document.createElement(\"div\");\r\n  div.classList.add(\"container-result\");\r\n\r\n  /*Por cada if verifica que jugo la computadora y el player  \r\n  depende que jugaron se crea un elemento img y se carga la imagen\r\n  correspondiente*/\r\n  if (nuevoGame.computerPlay == \"piedra\") {\r\n    const jugadaCompuImgEl = document.createElement(\"img\");\r\n    jugadaCompuImgEl.src =\r\n      \"https://marianoaguilar13.github.io/imagenes-proyecto-final/piedra-invertido.png\";\r\n    jugadaCompuImgEl.classList.add(\"jugada-compu\");\r\n\r\n    div.appendChild(jugadaCompuImgEl);\r\n  }\r\n  if (nuevoGame.computerPlay == \"papel\") {\r\n    const jugadaCompuImgEl = document.createElement(\"img\");\r\n    jugadaCompuImgEl.src =\r\n      \"https://marianoaguilar13.github.io/imagenes-proyecto-final/papel-invertido.png\";\r\n    jugadaCompuImgEl.classList.add(\"jugada-compu\");\r\n\r\n    div.appendChild(jugadaCompuImgEl);\r\n  }\r\n  if (nuevoGame.computerPlay == \"tijeras\") {\r\n    const jugadaCompuImgEl = document.createElement(\"img\");\r\n    jugadaCompuImgEl.src =\r\n      \"https://marianoaguilar13.github.io/imagenes-proyecto-final/tijera-invertido.png\";\r\n    jugadaCompuImgEl.classList.add(\"jugada-compu\");\r\n\r\n    div.appendChild(jugadaCompuImgEl);\r\n  }\r\n\r\n  const botonVerScoreEl = document.createElement(\"div\");\r\n  div.classList.add(\"container-boton\");\r\n\r\n  botonVerScoreEl.innerHTML = `\r\n        <button-normal-el class=\"boton\"> Ver Score </button-normal-el>\r\n        `;\r\n\r\n  div.appendChild(botonVerScoreEl);\r\n\r\n  if (nuevoGame.myPlay == \"piedra\") {\r\n    const jugadaPlayerImgEl = document.createElement(\"img\");\r\n    jugadaPlayerImgEl.src =\r\n      \"https://marianoaguilar13.github.io/imagenes-proyecto-final/piedra.svg\";\r\n    jugadaPlayerImgEl.classList.add(\"jugada-player\");\r\n\r\n    div.appendChild(jugadaPlayerImgEl);\r\n  }\r\n  if (nuevoGame.myPlay == \"papel\") {\r\n    const jugadaPlayerImgEl = document.createElement(\"img\");\r\n    jugadaPlayerImgEl.src =\r\n      \"https://marianoaguilar13.github.io/imagenes-proyecto-final/papel.svg\";\r\n    jugadaPlayerImgEl.classList.add(\"jugada-player\");\r\n\r\n    div.appendChild(jugadaPlayerImgEl);\r\n  }\r\n  if (nuevoGame.myPlay == \"tijeras\") {\r\n    const jugadaPlayerImgEl = document.createElement(\"img\");\r\n    jugadaPlayerImgEl.src =\r\n      \"https://marianoaguilar13.github.io/imagenes-proyecto-final/tijera.svg\";\r\n    jugadaPlayerImgEl.classList.add(\"jugada-player\");\r\n\r\n    div.appendChild(jugadaPlayerImgEl);\r\n  }\r\n\r\n  let style = document.createElement(\"style\");\r\n  style.textContent = `\r\n                        .container-result {\r\n                          display: flex;\r\n                          min-height: 100vh;\r\n                          width: 100%;\r\n                          justify-content: space-between;\r\n                          flex-direction: column;\r\n                          align-content: center;\r\n                        }\r\n                        \r\n                        @media (min-width: 600px) {\r\n                          .container-result {\r\n                            \r\n                            height: 650px;\r\n                            max-width: 450px;\r\n                            margin: 0 auto;\r\n                          }\r\n                        }\r\n\r\n                        .container-boton{\r\n                          display: flex;\r\n                          width: 100%;\r\n                        }\r\n                        \r\n                        .boton {\r\n                          width:100%;\r\n                         \r\n                        }\r\n                        \r\n                        .jugada-compu {\r\n                          height: 300px;\r\n                          align-self: center;\r\n                          margin-bottom: 20px;\r\n                        }\r\n                        \r\n                        .jugada-player {\r\n                          height: 300px;\r\n                          align-self: center;\r\n                          margin-top: 20px;\r\n                        }\r\n                        \r\n                        \r\n                      `;\r\n\r\n  div.appendChild(style);\r\n\r\n  const botonScoreEl = div.querySelector(\".boton\");\r\n\r\n  if (botonScoreEl != null) {\r\n    botonScoreEl.addEventListener(\"click\", (e) => {\r\n      e.preventDefault();\r\n\r\n      params.goTo(\"./result-score\");\r\n    });\r\n  }\r\n\r\n  return div;\r\n}\r\n","import { state } from \"../../state\";\r\n\r\nexport function initPageResultScore(params) {\r\n  const div = document.createElement(\"div\");\r\n\r\n  //me traigo la data de la ultima jugada para setearla en el historial\r\n  const dataForPushHistory = state.getState();\r\n\r\n  let playToPush = {\r\n    computerPlay: dataForPushHistory.currentGame.computerPlay,\r\n    myPlay: dataForPushHistory.currentGame.myPlay,\r\n  };\r\n\r\n  state.pushToHistory(playToPush);\r\n\r\n  const newData = state.getState();\r\n\r\n  //guardo el ultimo game y las jugadas del ultimo game\r\n  const nuevoGame = newData.currentGame;\r\n  const jugadaCompu = nuevoGame.computerPlay;\r\n  const jugadaPlayer = nuevoGame.myPlay;\r\n\r\n  //whoWins es un metodo del state que nos permite ver quien gano\r\n  //pasandole 2 jugadas, luego guardo ese resultado\r\n  const resultMatch = state.whoWins(jugadaPlayer, jugadaCompu);\r\n\r\n  //me guardo el historial para recorrer y calcular el score total\r\n  const historyRecorrer = newData.history;\r\n  console.log(\"el historial\", historyRecorrer);\r\n\r\n  let winCompu = 0;\r\n  let winPlayer = 0;\r\n\r\n  //recorro el historial y veo quien gano cada game, luego las victorias\r\n  //del player las guardo en una variable y las de la pc tambien\r\n  for (const gameActual of historyRecorrer) {\r\n    console.log(gameActual);\r\n\r\n    const playCompu = gameActual.computerPlay;\r\n    const playPlayer = gameActual.myPlay;\r\n    const result = state.whoWins(playPlayer, playCompu);\r\n\r\n    if (result == \"Victoria\") {\r\n      winPlayer++;\r\n    }\r\n\r\n    if (result == \"Derrota\") {\r\n      winCompu++;\r\n    }\r\n  }\r\n\r\n  //aca muestro con resultMatch, con winPlayer y WinCompu, quien\r\n  //gano la ultima partida y cuantas victorias de cada uno\r\n  div.innerHTML = `\r\n    <div class=\"container\">\r\n        <result-escore-el quienGano=\"${resultMatch}\" numVos=\"${winPlayer}\" numMaquina=\"${winCompu}\" ></result-escore-el>\r\n        <button-normal-el class=\"boton-volver boton\">Volver a Jugar</button-normal-el>\r\n        <button-normal-el class=\"boton-reinicio boton\">Reiniciar Score</button-normal-el>\r\n    </div>\r\n        `;\r\n\r\n  let style = document.createElement(\"style\");\r\n  style.textContent = `\r\n                          .container {\r\n                              height: 100vh;\r\n                              width: 100%;\r\n                              \r\n                          }\r\n                          \r\n                          @media (min-width: 600px) {\r\n                              .container {\r\n                              min-height: 80vh;\r\n                              width: 450px;\r\n                              margin: 0 auto;\r\n                              }\r\n                          }\r\n\r\n                          .boton {\r\n                            margin: 10px;\r\n                          }\r\n                          \r\n                         \r\n                        `;\r\n  div.appendChild(style);\r\n\r\n  //este boton vuelve a instrucciones para comenzar un nuevo game\r\n  const botonVolverEl = div.querySelector(\".boton-volver\") as any;\r\n\r\n  botonVolverEl.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    params.goTo(\"./instructions\");\r\n  });\r\n\r\n  //con este boton reiniciamos el historial\r\n  const botonReinicioEl = div.querySelector(\".boton-reinicio\") as any;\r\n\r\n  botonReinicioEl.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    const newData = state.getState();\r\n    newData.history = [{}];\r\n    state.setState(newData);\r\n\r\n    params.goTo(\"./instructions\");\r\n  });\r\n\r\n  return div;\r\n}\r\n","export function init() {\r\n  class ButtonNormalEl extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.render();\r\n    }\r\n\r\n    shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    render() {\r\n      //creo el style, que solo puede ser usados por elementos del header-el\r\n      let style = document.createElement(\"style\");\r\n      style.textContent = `\r\n                    .boton {\r\n                        border: solid 5px;\r\n                        border-color: var(--azul-borde);\r\n                        border-radius: 10px;\r\n                        height: 80px;\r\n                        width: 100%;\r\n                        font-family: \"Odibee Sans\", cursive;\r\n                        font-weight: 400;\r\n                        font-size: 36px;\r\n                        background-color: var(--azul-boton);\r\n                        color: whitesmoke;\r\n                        margin-top: 20px;\r\n                    }\r\n                        \r\n                `;\r\n\r\n      const buttonEl = document.createElement(\"button\");\r\n      buttonEl.classList.add(\"boton\");\r\n      buttonEl.textContent = this.textContent;\r\n\r\n      this.shadow.appendChild(buttonEl);\r\n\r\n      this.shadow.appendChild(style);\r\n    }\r\n  }\r\n  customElements.define(\"button-normal-el\", ButtonNormalEl);\r\n}\r\n","import { state } from \"../../src/state\";\r\nimport { computerJuego } from \"../../src/computerPlay\";\r\n\r\nexport function init() {\r\n  type Jugada = \"piedra\" | \"papel\" | \"tijeras\";\r\n\r\n  class PapelEl extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.render();\r\n    }\r\n\r\n    shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    render() {\r\n      //creo el style, que solo puede ser usados por elementos del header-el\r\n      let style = document.createElement(\"style\");\r\n      style.textContent = `\r\n                           \r\n                  `;\r\n\r\n      this.shadow.innerHTML = `\r\n        <img class=\"papel-img\" src=\"https://marianoaguilar13.github.io/imagenes-proyecto-final/papel.svg\" alt=\"papel\" />\r\n    `;\r\n\r\n      this.shadow.appendChild(style);\r\n    }\r\n  }\r\n  customElements.define(\"papel-el\", PapelEl);\r\n}\r\n","import { state } from \"../../src/state\";\r\nimport { computerJuego } from \"../../src/computerPlay\";\r\n\r\nexport function init() {\r\n  type Jugada = \"piedra\" | \"papel\" | \"tijeras\";\r\n\r\n  class PiedraEl extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.render();\r\n    }\r\n\r\n    shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    render() {\r\n      //creo el style, que solo puede ser usados por elementos del header-el\r\n      let style = document.createElement(\"style\");\r\n      style.textContent = `\r\n                                                  \r\n                    `;\r\n\r\n      this.shadow.innerHTML = `\r\n          <img class=\"piedra-img\" src=\"https://marianoaguilar13.github.io/imagenes-proyecto-final/piedra.svg\" alt=\"piedra\" />\r\n      `;\r\n\r\n      this.shadow.appendChild(style);\r\n    }\r\n  }\r\n  customElements.define(\"piedra-el\", PiedraEl);\r\n}\r\n","import { state } from \"../../src/state\";\r\nimport { computerJuego } from \"../../src/computerPlay\";\r\n\r\nexport function init() {\r\n  type Jugada = \"piedra\" | \"papel\" | \"tijeras\";\r\n\r\n  class TijerasEl extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.render();\r\n    }\r\n\r\n    shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    render() {\r\n      //creo el style, que solo puede ser usados por elementos del header-el\r\n      let style = document.createElement(\"style\");\r\n      style.textContent = `                       \r\n                          \r\n                      `;\r\n\r\n      this.shadow.innerHTML = `\r\n            <img class=\"tijeras-img\" src=\"https://marianoaguilar13.github.io/imagenes-proyecto-final/tijera.svg\" alt=\"tijeras\" />\r\n        `;\r\n\r\n      this.shadow.appendChild(style);\r\n    }\r\n  }\r\n  customElements.define(\"tijeras-el\", TijerasEl);\r\n}\r\n","import { state } from \"../state\";\r\n\r\nexport function init() {\r\n  class ResultEscoreEl extends HTMLElement {\r\n    //estos son los atributos que voy a estar obsevando su cambios\r\n    static get observedAttributes() {\r\n      return [\"quienGano\", \"numVos\", \"numMaquina\"];\r\n    }\r\n\r\n    shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    constructor() {\r\n      // Always call super first in constructor\r\n      super();\r\n      this.render();\r\n    }\r\n\r\n    //creo el style del customElement\r\n    render() {\r\n      let style = document.createElement(\"style\");\r\n      style.textContent = `\r\n      .container-page {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        margin: 40px auto;\r\n      }\r\n      \r\n      @media (min-width: 600px) {\r\n        .container-page {\r\n          display: flex;\r\n          flex-direction: column;\r\n          width: 450px;\r\n          margin: 20px auto;\r\n        }\r\n      }\r\n      \r\n      .resultado-titulo {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 72px;\r\n        text-align: center;\r\n        color: black;\r\n        margin-top: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n      \r\n      .container-score {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 80%;\r\n        padding: 0 20px;\r\n        margin: 40px auto;\r\n        border: solid 10px black;\r\n        border-radius: 10px;\r\n        justify-content: space-evenly;\r\n      }\r\n      \r\n      .score-titulo {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 48px;\r\n        text-align: center;\r\n        color: var(--titulos);\r\n        margin-top: 0;\r\n        margin-bottom: 0;\r\n      }\r\n      \r\n      .lista-score {\r\n        list-style-type: none;\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 32px;\r\n        text-align: center;\r\n        color: var(--titulos);\r\n      }\r\n      \r\n      .li-score-vos {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 32px;\r\n        text-align: end;\r\n        color: var(--titulos);\r\n      }\r\n\r\n      .li-score-maquina {\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: bold;\r\n        font-size: 32px;\r\n        text-align: end;\r\n        color: var(--titulos);\r\n      }\r\n      `;\r\n\r\n      //creo la estructura del customElement\r\n      this.shadow.innerHTML = `\r\n            <div class=\"container-page\">\r\n                <h3 class=\"resultado-titulo\"></h3>\r\n                <div class=\"container-score\">\r\n                    <h3 class=\"score-titulo\">Score</h3>\r\n                    <ul class=\"lista-score\">\r\n                      <li class=\"li-score-vos\">vos: </li>\r\n                      <li class=\"li-score-maquina\">compu: </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n  `;\r\n\r\n      const tituloEl = this.shadow.querySelector(\".resultado-titulo\") as any;\r\n      tituloEl.textContent = this.getAttribute(\"quienGano\");\r\n\r\n      const scoreVosEl = this.shadow.querySelector(\".li-score-vos\") as any;\r\n      scoreVosEl.textContent =\r\n        scoreVosEl.textContent + this.getAttribute(\"numVos\");\r\n      const scoreMaquinaEl = this.shadow.querySelector(\r\n        \".li-score-maquina\"\r\n      ) as any;\r\n      scoreMaquinaEl.textContent =\r\n        scoreMaquinaEl.textContent + this.getAttribute(\"numMaquina\");\r\n\r\n      this.shadow.appendChild(style);\r\n    }\r\n  }\r\n\r\n  customElements.define(\"result-escore-el\", ResultEscoreEl);\r\n}\r\n"],"names":["$0b89d474933103bc$export$ca000e230c0caa3e","$5e365b6ace611e18$export$89c746873e8678ad","params","div","document","createElement","innerHTML","style","textContent","appendChild","boton","querySelector","addEventListener","evento","preventDefault","goTo","$85f7af2e90239f35$export$e17a77b57ff3c6ab","numAleatorio","Math","trunc","max","random","$e817d3341cf3ea9c$var$BASE_PATH","$e817d3341cf3ea9c$var$isGithubPages","location","host","includes","$e817d3341cf3ea9c$var$routes","path","component","timerJugada","counter","cuentaRegresiva","intervalId","setInterval","console","log","clearInterval","alert","piedraEl","e","newData","getState","jugadaCompu","currentGame","myPlay","computerPlay","setState","tijerasEl","papelEl","nuevoGame","classList","add","jugadaCompuImgEl","src","botonVerScoreEl","jugadaPlayerImgEl","botonScoreEl","dataForPushHistory","playToPush","pushToHistory","jugadaPlayer","resultMatch","whoWins","historyRecorrer","history","winCompu","winPlayer","gameActual","playCompu","playPlayer","result","botonVolverEl","botonReinicioEl","ButtonNormalEl","HTMLElement","constructor","shadow","attachShadow","mode","render","buttonEl","customElements","define","PapelEl","PiedraEl","TijerasEl","ResultEscoreEl","observedAttributes","tituloEl","getAttribute","scoreVosEl","scoreMaquinaEl","subscribe","actualState","historyStingifeado","JSON","stringify","localStorage","setItem","getItem","historialDeJugadas","parse","root","container","completePath","pushState","handleRoute","route","newRoute","replace","r","test","el","firstChild","removeChild","pathname","window","onpopstate","event"],"version":3,"file":"index.88e45496.js.map"}